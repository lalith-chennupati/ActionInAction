name: PR Test Case and Commit Service Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  contents: write
  pull-requests: write

jobs:
  test-case-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Debug Environment Variables
        run: |
          if [ -z "$GIT_TOKEN" ]; then echo "GIT_TOKEN is empty"; else echo "GIT_TOKEN is set"; fi
          if [ -z "$AI_API_KEY" ]; then echo "AI_API_KEY is empty"; else echo "AI_API_KEY is set"; fi
          if [ -z "$TEST_KEY" ]; then echo "TEST_KEY is empty"; else echo "TEST_KEY is set"; fi
        env:
          GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GIT_VAR_TOKEN: ${{ vars.SAMPLE_KEY }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          TEST_KEY: ${{ secrets.TEST_KEY }}
      - name: Build Shadow Jar
        run: ./gradlew shadowJar --no-daemon
        env:
          GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          TEST_KEY: ${{ secrets.TEST_KEY }}
      - name: Run PRTestCaseService and PRCommitService
        env:
          GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          TEST_KEY: ${{ secrets.TEST_KEY }}
        run: java -cp build/libs/ActionInAction-0.0.1-SNAPSHOT.jar org.example.ai.PRTestCaseService
          ${{ github.repository_owner }}
          ${{ github.event.repository.name }}
          ${{ github.event.pull_request.number }}